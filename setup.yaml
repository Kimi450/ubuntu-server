---
- name: Setup home server
  hosts: all
  gather_facts: false
  tasks:
    - name: Get User ID (UID)
      shell: "id -u `whoami`"
      register: uid_output

    - name: Get architecture
      command: dpkg --print-architecture
      register: architecture_output
    
    - name: Set shared facts
      set_fact:
        uid: "{{ uid_output.stdout }}"
        user: "{{ ansible_user }}"
        architecture: "{{ architecture_output.stdout }}"
        dir_minikube_mount: "/minikube-host"
        dir_mount_path: "/media"
        dir_home: "/home/{{ ansible_user }}"
        dir_data: "/home/{{ ansible_user }}/data"
        dir_repos: "/home/{{ ansible_user }}/repos"
        dir_data_movies: "/home/{{ ansible_user }}/data/movies"
        dir_data_shows: "/home/{{ ansible_user }}/data/shows"
        dir_data_games: "/home/{{ ansible_user }}/data/games"
        dir_data_books: "/home/{{ ansible_user }}/data/books"
        dir_data_music: "/home/{{ ansible_user }}/data/music"
        dir_data_downloads: "/home/{{ ansible_user }}/data/downloads"

- import_playbook: server-basics.yaml

- import_playbook: install-tightvnc-and-ssh.yaml
  when:
    - vnc.enabled

- import_playbook: install-cn-basics.yaml
  when:
    - minikube.enabled or cloud_native.enabled

- import_playbook: install-and-configure-minikube.yaml
  vars:
    api_server_forwarded_port: "3001"
  when:
    - cloud_native.enabled
    - minikube.enabled

- import_playbook: install-charts.yaml
  vars:
    ip: "{{ ansible_host }}"
  when:
    - cloud_native.enabled
    - minikube.enabled

- import_playbook: install-and-configure-samba.yaml
  when:
    - smb.enabled

- import_playbook: install-and-configure-squid.yaml
  when:
    - squid.enabled

- import_playbook: install-and-configure-cloudflare-dns-updater-service.yaml
  when:
    - cloudflare.enabled

- import_playbook: remote-access-minikube.yaml
  vars:
    api_server_forwarded_port: "3001"
    ip: "{{ ansible_host }}"
  when:
    - cloud_native.enabled
    - minikube.enabled
    - minikube.remote_access.enabled

- import_playbook: install-and-configure-pinless-bluetooth-pairing.yaml
  when:
    - bluetooth.pinless.enabled

# Deprecated stuff

- import_playbook: deprecated_playbooks/spotify/install-and-configure-spotifyd.yaml
  when:
    - spotify.enabled
