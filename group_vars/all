---
# file: group_vars/all

# Domain name to be used
domain_name: "" # FILL OUT

# for basic server setup (in my opinion)
basics:
  enabled: True

# vnc for remote desktop with GUI
vnc:
  enabled: True
  # will be truncated to 8 characters
  password: "" # FILL OUT
  # display for what port will be accessed
  # use 0-9 only for access port to be 590{{display}}
  display: "4"

# squid credentials, for proxy
squid:
  enabled: True
  username: "" # FILL OUT
  password: "" # FILL OUT
  port: "3128"

# sambashare for network attached storage
smb:
  enabled: True
  password: "" # FILL OUT
  share_name: "sambashare"

# If you are using cloudflare and want to auto update entries
# when the server IP changes
# NOTE: It doesnt add entries, refer to the README.md file for instructions
cloudflare:
  enabled: True
  # Set your Cloudflare Zone ID
  zone_id: "" # FILL OUT
  # Set your Cloudflare Bearer token to view the zone and edit DNS records in it
  auth_key: "" # FILL OUT
  # WORK_IN_PROGRESS: Set your Cloudfare API token for editing zone DNS
  api_token: "WORK_IN_PROGRESS"

# ==== Select what charts you wish to install ====
charts:
  enabled: True
  resources:
    # kubernetes resource requests for the pods
    requests:
      cpu: 10m
      memory: 50M
    # kubernetes resource limits for the pods
    # probably should match these with the minikube resources from below
    limits:
      cpu: 4
      memory: "6000M"
  # timeout as helm expects it in --timeout for the charts
  timeout: 15m
  services:
    # log monitoring with Loki (Needs Grafana for a UI)
    loki_stack:
      enabled: True
    # metrics monitoring with Grafana and Prometheus
    kube_prometheus_stack:
      enabled: True
      grafana:
        admin_username: "admin" # FILL OUT
        admin_password: "admin" # FILL OUT
    # media client
    jellyfin:
      enabled: True
    # torrents
    qbittorrent:
      enabled: True
    # to bypass cloudflare protection
    flaresolverr:
      enabled: True
    # to manage indexers
    prowlarr:
      enabled: True
    # movie monitoring
    radarr:
      enabled: True
    # show monitoring
    sonarr:
      enabled: True
    # subtitle hunting
    bazarr:
      enabled: True
    # movie and show interface
    jellyseerr:
      enabled: True
    # speed test to server
    librespeed:
      enabled: True
    # movie, show and music interface
    ombi:
      enabled: False
    # book monitoring
    readarr:
      enabled: False
    # music monitoring
    lidarr:
      enabled: False
    # book client
    calibre_web:
      enabled: False
    # book management
    calibre:
      enabled: False

# ==== To install Docker, helm and kubectl ====

cloud_native:
  enabled: True

# ==== Minikube settings ====

minikube: # cli param values for minikube
  enabled: True
  # This cant be less than 2, it is the minimum required for kubernetes
  cpus: "max"
  # This cant be less than 1800, it is the minimum required for kubernetes
  # Leave at least 2000MB as headroom for the OS to run (system_max - 2000MB)
  memory: "6000"
  disk_size: "50gb"
  nodes: "1"
  cert_expiration: "87660h0m0s"
  remote_access:
    enabled: True

# to allow pinless bluetooth connections to the server
bluetooth:
  pinless:
    enabled: False

# ==== For the Archived playbooks ====

spotify: # spotify settings
  enabled: False
  username: "NO_NEED_TO_FILL"
  password: "NO_NEED_TO_FILL"
  init_volume: "69"
