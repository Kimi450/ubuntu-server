---
- name: Install and configure pinless bluetooth pairing
  hosts: all
  gather_facts: true
  remote_user: kimi450
  vars:
    bt_agent_service_location: /etc/systemd/system/bt-agent.service
    bt_agent_service_script_location: /usr/local/bin/remove-paired-devices.sh
    bt_agent_service_name: bt-agent.service
    bluetooth_service_location: /lib/systemd/system/bluetooth.service
    bluetooth_conf_location: /etc/bluetooth/main.conf
    bluetooth_service_name: bluetooth.service
    pulseaudio_system_service_location: /etc/systemd/system/pulseaudio.service
    pulseaudio_system_service_name: pulseaudio.service
    remote_user: kimi450

  tasks:
    # https://www.raspberrypi.org/forums/viewtopic.php?t=235519
    - name: Required dependencies
      become: true
      apt:
        update_cache: yes
        pkg:
          - bluez
          - bluez-tools 
          - pulseaudio-module-bluetooth
          - gnome-bluetooth
        state: latest

    - name: Enable bluetooth
      become: true
      shell: rfkill unblock bluetooth
           
    - name: "Change bluetooth service to enable volume control"
      block:
        - name: "Service file edit: Disable avrcp plugin to control volume"
          become: true  
          lineinfile: 
            path: "{{ bluetooth_service_location }}"
            regexp: '^ExecStart=(.*)$' 
            line: 'ExecStart=/usr/lib/bluetooth/bluetoothd --noplugin=avrcp'
            backrefs: yes

        - name: Reload systemd service
          include_tasks: tasks-reload-systemd-service.yaml
          vars:
            service_name: "{{ bluetooth_service_name }}"
            become: True

    - name: "Add {{ remote_user }} to audio group"
      become: true
      ansible.builtin.user:
        name: "{{ remote_user }}"
        groups: audio
        append: yes

    - name: Setup NoInputNoOutput bt-agent for pinless pairing
      block:
        - name: "Remove {{ pulseaudio_system_service_location }}"
          become: true
          file:
            path: "{{ pulseaudio_system_service_location }}"
            state: absent

        - name: "Create {{ pulseaudio_system_service_location }}"
          become: true
          file:
            path: "{{ pulseaudio_system_service_location }}"
            state: touch

        - name: "Populate {{ pulseaudio_system_service_location }} file"
          become: True
          blockinfile:
            path: "{{ pulseaudio_system_service_location }}"
            block: |
              [Unit]
              Description=PulseAudio Daemon

              [Service]
              ExecStart=/usr/bin/pulseaudio --daemonize=no --log-target=journal
              Restart=on-failure
              Type=simple
              User={{ remote_user }}

              [Install]
              WantedBy=multi-user.target

        - name: Reload systemd service
          include_tasks: tasks-reload-systemd-service.yaml
          vars:
            service_name: "{{ pulseaudio_system_service_name }}"
            become: True

    - name: Setup NoInputNoOutput bt-agent for pinless pairing
      block:
        - name: "Remove {{ bt_agent_service_script_location }}"
          become: true
          file:
            path: "{{ bt_agent_service_location }}"
            state: absent

        - name: "Copy script to {{ bt_agent_service_script_location }}"
          become: true
          copy:
            src: helpers/remove-paired-devices.sh
            dest: "{{ bt_agent_service_script_location }}"
            mode: "0755"

        - name: "Remove {{ bt_agent_service_location }}"
          become: true
          file:
            path: "{{ bt_agent_service_location }}"
            state: absent

        - name: "Create {{ bt_agent_service_location }}"
          become: true
          file:
            path: "{{ bt_agent_service_location }}"
            state: touch

        - name: "Populate {{ bt_agent_service_location }} file"
          become: True
          blockinfile:
            path: "{{ bt_agent_service_location }}"
            block: |
              [Unit]
              Description=Bluetooth Auth Agent
              After=bluetooth.service
              PartOf=bluetooth.service
              StartLimitInterval=0

              [Service]
              Type=simple
              ExecStartPre=/usr/bin/bluetoothctl power yes
              ExecStartPre=/usr/bin/bluetoothctl discoverable yes
              ExecStartPre=/usr/bin/bluetoothctl discoverable-timeout 0
              ExecStartPre=/usr/bin/bluetoothctl pairable yes
              ExecStartPre=/usr/bin/amixer set Master 100
              ExecStartPre={{ bt_agent_service_script_location }}
              ExecStart=/usr/bin/bt-agent -c NoInputNoOutput
              Restart=on-failure
              RestartSec=5

              [Install]
              WantedBy=bluetooth.target

        - name: Reload systemd service
          include_tasks: tasks-reload-systemd-service.yaml
          vars:
            service_name: "{{ bt_agent_service_name }}"
            become: True

    - name: "Setup alsa-restore for the {{ remote_user }}"
      # https://askubuntu.com/questions/132440/headphone-jack-not-working
      # https://bbs.archlinux.org/viewtopic.php?id=147206
      # alsa-restore only works on root as its a system service,
      # to make it work for {{ remote_user }}, a systemd service on the
      # user level needs to be created. This way a restart will
      # fix audio issues
      become: True
      block:
        - name: Copy system alsa-restore service
          copy:
            remote_src: true
            src: /lib/systemd/system/alsa-restore.service
            dest: /etc/systemd/system/alsa-restore.service
        
        - name: "Edit service file to run as {{ remote_user }}"
          lineinfile: 
            path: "{{ loc_user_service }}"
            insertafter: '^\[Service\]$'
            line: "User={{ remote_user }}"

        - name: Reload systemd service
          include_tasks: tasks-reload-systemd-service.yaml
          vars:
            service_name: "{{ service_file_name }}"
            become: True

      vars:
        loc_original_service: /lib/systemd/system/alsa-restore.service
        loc_user_service: /etc/systemd/system/alsa-restore.service
        service_file_name: alsa-restore.service
