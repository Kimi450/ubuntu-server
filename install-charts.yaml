---
- name: Install basic charts
  hosts: all
  gather_facts: true
  remote_user: kimi450
  vars:
    namespace_user: kimi450
    namespace_monitoring: monitoring
    namespace_generic_services: generic-services
    grafana_admin_password: admin
  tasks:

    - name: Create namespaces namespace
      shell: "kubectl create namespace {{ item }}"
      ignore_errors: True
      with_items:
        - "{{ namespace_monitoring }}"
        - "{{ namespace_user }}"
        - "{{ namespace_generic_services }}"

    - name: Install grafana
      block:
      - name: Install the chart
        include_tasks: tasks-install-chart.yaml
        # https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack
        vars:
          repo_name: prometheus-community
          repo_link: https://prometheus-community.github.io/helm-charts
          install_namespace: "{{ namespace_monitoring }}"
          release_name: kube-prometheus-stack
          chart_name: kube-prometheus-stack
          set_options: ""

      - name: Expose grafana service
        include_tasks: tasks-kubernetes-port-forward-service.yaml
        vars:
          service_name: kube-prometheus-stack-grafana
          service_file_name: grafana.service
          service_file_location_base: /etc/systemd/system/
          service_namespace: "{{ namespace_monitoring }}"
          service_container_port: 80
          host_port: 3002

      - include_tasks: tasks-allow-ports.yaml
        vars:
          ports: 
            - "3002"
            
      - name: "Reset Grafana admin password to '{{ grafana_admin_password }}'"  
        shell: "kubectl exec -it -n {{ namespace_monitoring }} $(kubectl get pods -n {{ namespace_monitoring }} | grep grafana | awk '{print $1}') -c grafana -- grafana-cli admin reset-admin-password {{ grafana_admin_password }}"
      
      - debug:
          msg: "You can log into Grafana at '{{ hostvars[inventory_hostname]['ansible_env'].SSH_CONNECTION.split(' ')[2] }}:3002' using admin/{{ grafana_admin_password }}"

    - name: Install jellyfin
      # https://artifacthub.io/packages/helm/k8s-at-home/jellyfin
      block:
      - name: Install the chart
        include_tasks: tasks-install-chart.yaml
        vars:
          repo_name: k8s-at-home
          repo_link: https://k8s-at-home.com/charts/
          install_namespace: "{{ namespace_generic_services }}"
          release_name: jellyfin
          chart_name: jellyfin
          set_options: "--set \
            controller.type=statefulset,\
            persistence.config.enabled=yes,\
            persistence.cache.enabled=true,\
            persistence.cache.accessMode=ReadWriteOnce,\
            persistence.cache.size=50G,\
            persistence.media.enabled=yes,\
            persistence.media.type=hostPath,\
            persistence.media.hostPath={{ dir_minikube_mount }}"

      - name: Expose jellyfin service
        include_tasks: tasks-kubernetes-port-forward-service.yaml
        vars:
          service_name: jellyfin
          service_file_name: jellyfin.service
          service_file_location_base: /etc/systemd/system/
          service_namespace: "{{ namespace_generic_services }}"
          service_container_port: 8096
          host_port: 3003

      - include_tasks: tasks-allow-ports.yaml
        vars:
          ports: 
            - "3003"

      - debug:
          msg: "You can log into Jellyfin at '{{ hostvars[inventory_hostname]['ansible_env'].SSH_CONNECTION.split(' ')[2] }}:3003/web/index.html'. '{{ dir_home }}' is available under '/media' and can be used by Jellyfin. If need be, delete any existing server and go to the URL mention above once again to setup a new server."
