---
- name: Install basic charts
  hosts: all
  gather_facts: true
  remote_user: kimi450
  vars:
    namespace_user: kimi450
    namespace_monitoring: monitoring
    namespace_generic_services: generic-services
    grafana_admin_password: admin
  tasks:

    - name: Create namespaces namespace
      shell: "kubectl create namespace {{ item }}"
      ignore_errors: True
      with_items:
        - "{{ namespace_monitoring }}"
        - "{{ namespace_user }}"
        - "{{ namespace_generic_services }}"

    - name: Install grafana
      block:
      - name: Install/Upgrade the grafana chart
        include_tasks: tasks-install-chart.yaml
        # https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack
        vars:
          repo_name: prometheus-community
          repo_link: https://prometheus-community.github.io/helm-charts
          install_namespace: "{{ namespace_monitoring }}"
          release_name: kube-prometheus-stack
          chart_name: kube-prometheus-stack
          set_options: "--set \
            prometheus.prometheusSpec.retention=730d,\
            grafana.persistence.enabled=true,\
            prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.accessModes={'ReadWriteOnce'},\
            prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.resources.requests.storage='50Gi',\
            prometheus.prometheusSpec.serviceMonitorSelectorNilUsesHelmValues=false,\
            prometheus.prometheusSpec.serviceMonitorNamespaceSelector=null,\
            prometheus.prometheusSpec.serviceMonitorSelector=null,\
            prometheus.prometheusSpec.ruleSelectorNilUsesHelmValues=false,\
            prometheus.prometheusSpec.ruleNamespaceSelector=null,\
            prometheus.prometheusSpec.ruleSelector=null,\
            prometheus.prometheusSpec.podMonitorSelectorNilUsesHelmValues=false,\
            prometheus.prometheusSpec.podMonitorNamespaceSelector=null,\
            prometheus.prometheusSpec.podMonitorSelector=null,\
            prometheus.prometheusSpec.probeSelectorNilUsesHelmValues=false,\
            prometheus.prometheusSpec.probeSelectorNamespaceSelector=null,\
            prometheus.prometheusSpec.probeSelector=null"

      - name: Expose grafana service
        include_tasks: tasks-kubernetes-port-forward-service.yaml
        vars:
          service_name: kube-prometheus-stack-grafana
          service_file_name: grafana.service
          service_file_location_base: /etc/systemd/system/
          service_namespace: "{{ namespace_monitoring }}"
          host_port: 3002

      - include_tasks: tasks-allow-ports.yaml
        vars:
          ports: 
            - "3002"
            
      - name: "Reset Grafana admin password to '{{ grafana_admin_password }}'"  
        shell: "kubectl exec -it -n {{ namespace_monitoring }} $(kubectl get pods -n {{ namespace_monitoring }} | grep grafana | awk '{print $1}') -c grafana -- grafana-cli admin reset-admin-password {{ grafana_admin_password }}"
      
      - debug:
          msg: >
            You can log into Grafana at '{{ ip }}:3002' using
            admin/{{ grafana_admin_password }}"

    - name: Install jellyfin
      # https://artifacthub.io/packages/helm/k8s-at-home/jellyfin
      block:
      - name: Install/Upgrade the jellyfin chart
        include_tasks: tasks-install-chart.yaml
        vars:
          repo_name: k8s-at-home
          repo_link: https://k8s-at-home.com/charts/
          install_namespace: "{{ namespace_generic_services }}"
          release_name: jellyfin
          chart_name: jellyfin
          set_options: "--set \
            controller.type=statefulset,\
            persistence.config.enabled=yes,\
            persistence.cache.enabled=true,\
            persistence.cache.accessMode=ReadWriteOnce,\
            persistence.cache.size=50G,\
            persistence.media.enabled=yes,\
            persistence.media.type=hostPath,\
            persistence.media.hostPath={{ dir_minikube_mount }}"

      - name: Expose jellyfin service
        include_tasks: tasks-kubernetes-port-forward-service.yaml
        vars:
          service_name: jellyfin
          service_file_name: jellyfin.service
          service_file_location_base: /etc/systemd/system/
          service_namespace: "{{ namespace_generic_services }}"
          host_port: 3003

      - include_tasks: tasks-allow-ports.yaml
        vars:
          ports:
            - "3003"

      - debug:
          msg: >
              You can log into Jellyfin at '{{ hostvars[inventory_hostname]
              ['ansible_env'].SSH_CONNECTION.split(' ')[2] }}:3003/web/index.html'.
              '{{ dir_home }}' is available under '/media' and can be used by
              Jellyfin. If need be, delete any existing server and go to the
              URL mention above once again to setup a new server.

    - name: Install qbittorrent
      block:
      - name: Install/Upgrade the qbittorrent chart
        include_tasks: tasks-install-chart.yaml
        # https://artifacthub.io/packages/helm/k8s-at-home/qbittorrent
        vars:
          repo_name: k8s-at-home
          repo_link: https://k8s-at-home.com/charts/
          install_namespace: "{{ namespace_generic_services }}"
          release_name: qbittorrent
          chart_name: qbittorrent
          # runAsUser=1000 gives write access on the pod
          # 568 is the default user ID, added to the groups cause why not
          set_options: "--set \
            controller.type=statefulset,\
            common.dnsConfig.nameservers={8.8.8.8,8.8.4.4},\
            common.podSecurityContext.runAsUser=1000,\
            common.podSecurityContext.runAsGroup=568,\
            common.podSecurityContext.fsGroup=568,\
            persistence.config.enabled=yes,\
            persistence.media.enabled=yes,\
            persistence.media.type=hostPath,\
            persistence.media.hostPath={{ dir_minikube_mount }}"

      - name: Expose qbittorrent service
        include_tasks: tasks-kubernetes-port-forward-service.yaml
        vars:
          service_name: qbittorrent
          service_file_name: qbittorrent.service
          service_file_location_base: /etc/systemd/system/
          service_namespace: "{{ namespace_generic_services }}"
          host_port: 3004

      - include_tasks: tasks-allow-ports.yaml
        vars:
          ports:
            - "3004"

      - debug:
          msg: >
            You can log into qBittorrent at '{{ ip }}:3004' using
            admin/adminadmin as the default creds. Change this after deployment.
            '{{ dir_home }}' from the host is available under '/media' and
            can be used by the application to download things. Downloading in
            the directories under {{ dir_data }} will be picked up by Jellyfin.

    - name: Install prowlarr
      block:
      - name: Install/Upgrade the prowlarr chart
        include_tasks: tasks-install-chart.yaml
        # https://artifacthub.io/packages/helm/k8s-at-home/prowlarr
        vars:
          repo_name: k8s-at-home
          repo_link: https://k8s-at-home.com/charts/
          install_namespace: "{{ namespace_generic_services }}"
          release_name: prowlarr
          chart_name: prowlarr
          # runAsUser=1000 gives write access on the pod
          # 568 is the default user ID, added to the groups cause why not
          set_options: "--set \
            controller.type=statefulset,\
            common.dnsConfig.nameservers={8.8.8.8,8.8.4.4},\
            common.podSecurityContext.runAsUser=1000,\
            common.podSecurityContext.runAsGroup=568,\
            common.podSecurityContext.fsGroup=568,\
            persistence.config.enabled=yes,\
            persistence.media.enabled=yes,\
            persistence.media.type=hostPath,\
            persistence.media.hostPath={{ dir_minikube_mount }}"

      - name: Expose prowlarr service
        include_tasks: tasks-kubernetes-port-forward-service.yaml
        vars:
          service_name: prowlarr
          service_file_name: prowlarr.service
          service_file_location_base: /etc/systemd/system/
          service_namespace: "{{ namespace_generic_services }}"
          host_port: 3005

      - include_tasks: tasks-allow-ports.yaml
        vars:
          ports:
            - "3005"

      - debug:
          msg: >
            You can log into prowlarr at '{{ ip }}:3005'. Go to this
            URL and add the indexers you wish to use.
            '{{ dir_home }}' from the host is available under '/media' and
            can be used by the application to download things. Downloading in
            the directories under {{ dir_data }} will be picked up by Jellyfin.

    - name: Install radarr
      block:
      - name: Install/Upgrade the radarr chart
        include_tasks: tasks-install-chart.yaml
        # https://artifacthub.io/packages/helm/k8s-at-home/radarr
        vars:
          repo_name: k8s-at-home
          repo_link: https://k8s-at-home.com/charts/
          install_namespace: "{{ namespace_generic_services }}"
          release_name: radarr
          chart_name: radarr
          # runAsUser=1000 gives write access on the pod
          # 568 is the default user ID, added to the groups cause why not
          set_options: "--set \
            controller.type=statefulset,\
            common.dnsConfig.nameservers={8.8.8.8,8.8.4.4},\
            common.podSecurityContext.runAsUser=1000,\
            common.podSecurityContext.runAsGroup=568,\
            common.podSecurityContext.fsGroup=568,\
            persistence.config.enabled=yes,\
            persistence.media.enabled=yes,\
            persistence.media.type=hostPath,\
            persistence.media.hostPath={{ dir_minikube_mount }}"

      - name: Expose radarr service
        include_tasks: tasks-kubernetes-port-forward-service.yaml
        vars:
          service_name: radarr
          service_file_name: radarr.service
          service_file_location_base: /etc/systemd/system/
          service_namespace: "{{ namespace_generic_services }}"
          host_port: 3006

      - include_tasks: tasks-allow-ports.yaml
        vars:
          ports:
            - "3006"

      - debug:
          msg: >
            You can log into radarr at '{{ ip }}:3006'.
            '{{ dir_home }}' from the host is available under '/media' and
            can be used by the application to download things. Downloading in
            the directories under {{ dir_data }} will be picked up by Jellyfin.

    - name: Install sonarr
      block:
      - name: Install/Upgrade the sonarr chart
        include_tasks: tasks-install-chart.yaml
        # https://artifacthub.io/packages/helm/k8s-at-home/sonarr
        vars:
          repo_name: k8s-at-home
          repo_link: https://k8s-at-home.com/charts/
          install_namespace: "{{ namespace_generic_services }}"
          release_name: sonarr
          chart_name: sonarr
          # runAsUser=1000 gives write access on the pod
          # 568 is the default user ID, added to the groups cause why not
          set_options: "--set \
            controller.type=statefulset,\
            common.dnsConfig.nameservers={8.8.8.8,8.8.4.4},\
            common.podSecurityContext.runAsUser=1000,\
            common.podSecurityContext.runAsGroup=568,\
            common.podSecurityContext.fsGroup=568,\
            persistence.config.enabled=yes,\
            persistence.media.enabled=yes,\
            persistence.media.type=hostPath,\
            persistence.media.hostPath={{ dir_minikube_mount }}"

      - name: Expose sonarr service
        include_tasks: tasks-kubernetes-port-forward-service.yaml
        vars:
          service_name: sonarr
          service_file_name: sonarr.service
          service_file_location_base: /etc/systemd/system/
          service_namespace: "{{ namespace_generic_services }}"
          host_port: 3007

      - include_tasks: tasks-allow-ports.yaml
        vars:
          ports:
            - "3007"

      - debug:
          msg: >
            You can log into sonarr at '{{ ip }}:3007'.
            '{{ dir_home }}' from the host is available under '/media' and
            can be used by the application to download things. Downloading in
            the directories under {{ dir_data }} will be picked up by Jellyfin.

    - name: Install bazarr
      block:
      - name: Install/Upgrade the bazarr chart
        include_tasks: tasks-install-chart.yaml
        # https://artifacthub.io/packages/helm/k8s-at-home/bazarr
        vars:
          repo_name: k8s-at-home
          repo_link: https://k8s-at-home.com/charts/
          install_namespace: "{{ namespace_generic_services }}"
          release_name: bazarr
          chart_name: bazarr
          # runAsUser=1000 gives write access on the pod
          # 568 is the default user ID, added to the groups cause why not
          set_options: "--set \
            controller.type=statefulset,\
            common.dnsConfig.nameservers={8.8.8.8,8.8.4.4},\
            common.podSecurityContext.runAsUser=1000,\
            common.podSecurityContext.runAsGroup=568,\
            common.podSecurityContext.fsGroup=568,\
            persistence.config.enabled=yes,\
            persistence.media.enabled=yes,\
            persistence.media.type=hostPath,\
            persistence.media.hostPath={{ dir_minikube_mount }}"

      - name: Expose bazarr service
        include_tasks: tasks-kubernetes-port-forward-service.yaml
        vars:
          service_name: bazarr
          service_file_name: bazarr.service
          service_file_location_base: /etc/systemd/system/
          service_namespace: "{{ namespace_generic_services }}"
          host_port: 3008

      - include_tasks: tasks-allow-ports.yaml
        vars:
          ports:
            - "3008"

      - debug:
          msg: >
            You can log into bazarr at '{{ ip }}:3008'.
            '{{ dir_home }}' from the host is available under '/media' and
            can be used by the application.
